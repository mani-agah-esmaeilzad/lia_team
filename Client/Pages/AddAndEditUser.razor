@page "/AddUser"
@page "/EditUser/{id}"
@using Client.Models
@inject HttpClient Http
@inject NavigationManager Manager
<style>
    .bd-placeholder-img {
        font-size: 1.125rem;
        text-anchor: middle;
        -webkit-user-select: none;
        -moz-user-select: none;
        user-select: none;
    }

    .b-example-divider {
        width: 100%;
        height: 3rem;
        background-color: rgba(0, 0, 0, .1);
        border: solid rgba(0, 0, 0, .15);
        border-width: 1px 0;
        box-shadow: inset 0 .5em 1.5em rgba(0, 0, 0, .1), inset 0 .125em .5em rgba(0, 0, 0, .15);
    }

    .b-example-vr {
        flex-shrink: 0;
        width: 1.5rem;
        height: 100vh;
    }

    .bi {
        vertical-align: -.125em;
        fill: currentColor;
    }

    .nav-scroller {
        position: relative;
        z-index: 2;
        height: 2.75rem;
        overflow-y: hidden;
    }

    .nav-scroller .nav {
        display: flex;
        flex-wrap: nowrap;
        padding-bottom: 1rem;
        margin-top: -1px;
        overflow-x: auto;
        text-align: center;
        white-space: nowrap;
        -webkit-overflow-scrolling: touch;
    }

    .btn-bd-primary {
        --bd-violet-bg: #712cf9;
        --bd-violet-rgb: 112.520718, 44.062154, 249.437846;

        --bs-btn-font-weight: 600;
        --bs-btn-color: var(--bs-white);
        --bs-btn-bg: var(--bd-violet-bg);
        --bs-btn-border-color: var(--bd-violet-bg);
        --bs-btn-hover-color: var(--bs-white);
        --bs-btn-hover-bg: #6528e0;
        --bs-btn-hover-border-color: #6528e0;
        --bs-btn-focus-shadow-rgb: var(--bd-violet-rgb);
        --bs-btn-active-color: var(--bs-btn-hover-color);
        --bs-btn-active-bg: #5a23c8;
        --bs-btn-active-border-color: #5a23c8;
    }

    .bd-mode-toggle {
        z-index: 1500;
    }

    .bd-mode-toggle .dropdown-menu .active .bi {
        display: block !important;
    }
</style>

<main class="form-signin w-100 m-auto">
    <EditForm Model="@user" onValidSubmit="@Save"> <svg class="mb-4" width="72" height="57">
            <use xlink:href="#bootstrap" />
        </svg>
        <h1 class="h3 mb-3 fw-normal">@title</h1>
        <div class="form-floating">
            <InputText @bind-Value="@user.Name" type="text" class="form-control" placeholder="example" />

            <label for="floatingInput">first name</label>
        </div>
        <div class="form-floating">
            <InputText @bind-Value="@user.LastName" type="text" class="form-control" placeholder="example" />

            <label for="floatingInput">last name</label>
        </div>
        <div class="form-floating">
            <InputText @bind-Value="@user.Number" type="phone" class="form-control" placeholder="0912111111" />

            <label for="floatingInput">number</label>
        </div>
        <div class="form-floating">
            <InputText @bind-Value="@user.Role" type="text" class="form-control" placeholder="Admin" />

            <label for="floatingInput">Role</label>
        </div>
        <div class="form-floating">
            <InputTextArea @bind-Value="@user.Address" type="text" class="form-control" />
            <label for="floatingInput">Address</label>
        </div>
        <div class="form-floating">
            <InputText @bind-Value="@user.Password" type="password" class="form-control" placeholder="password" />

            <label for="floatingInput">Password</label>
        </div>
        <button class="btn btn-primary w-100 py-2" type="submit">Complate</button>
    </EditForm>
</main>


@code {
    private string title = "Add user";
    [Parameter]
    public string? id { get; set; }
    public User user = new();

    private EditContext editContext;
    private EventCallback<EditContext> Save { get; set; }

    protected override async Task OnInitializedAsync()
    {
        Save = EventCallback.Factory.Create<EditContext>(this, SaveUserAsync);
        if (id != null)
        {
            title = "Edit user";
            user = await Http.GetFromJsonAsync<User>($"http://localhost:5226/api/user/{@id}");
        }
    }


    protected async Task SaveUserAsync(EditContext editContext)
    {
        if (id == null)
        {
            await Http.PostAsJsonAsync("http://localhost:5226/api/user", user);
        }
        else
        {
            user.Id = id;
            await Http.PostAsJsonAsync($"http://localhost:5226/api/user/Update/{user.Id}", user);
        }
        Manager.NavigateTo("/userList");
    }
}